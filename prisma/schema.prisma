// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  username String    @unique
  email    String    @unique
  password String
  profile  Profile?
  comments Comment[]
  posts    Post[]
  createAt DateTime  @default(now())
  updateAt DateTime  @updatedAt
}

model Profile {
  id         Int      @id @default(autoincrement())
  firstName  String
  lastName   String
  age        Int
  pictureUrl String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int      @unique
  createAt   DateTime @default(now())
  updateAt   DateTime @updatedAt
}

model Comment {
  id       Int       @id @default(autoincrement())
  parentId Int?
  parent   Comment?  @relation("replies", fields: [parentId], references: [id], onDelete: Cascade)
  replies  Comment[] @relation("replies")
  content  String
  userId   Int
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  postId   Int
  post     Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  createAt DateTime  @default(now())
  updateAt DateTime  @updatedAt
}

model Post {
  id          Int        @id @default(autoincrement())
  title       String     @unique
  content     String
  imageUrl    String
  userId      Int
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  comments    Comment[]
  categories  Category[]
  publishedAt DateTime   @default(now())
  createAt    DateTime   @default(now())
  updateAt    DateTime   @updatedAt
}

model Category {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  posts    Post[]
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}
